{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rm293.LAPTOP-9OARGB3K\\\\Desktop\\\\Data Structures and Algo\\\\react\\\\movie_theater\\\\src\\\\pages\\\\Booking.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { v4 as uuid } from \"uuid\";\nimport Row from \"../components/Row\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Booking(_ref) {\n  _s();\n\n  let {\n    setTotalCost,\n    totalCost\n  } = _ref;\n  const navigate = useNavigate();\n  const {\n    rows\n  } = useParams();\n  const [error, setError] = useState(\"\");\n  const [seats, setSeats] = useState([]);\n  const [seatSelected, setSeatSelected] = useState([]);\n  const [totalBooked, setTotalBooked] = useState(0);\n  const [dsiableAll, setDisablell] = useState(false); //fetching data from the api\n  //   React.useEffect(() => {\n  //     fetch(`https://codebuddy.review/seats?count=${rows}`)\n  //       .then((res) => res.json())\n  //       .then((data) => {\n  //         console.log(data);\n  //       });\n  //   }, [rows]);\n  //checking number of seats\n\n  React.useEffect(() => {\n    let num_row = Number(rows);\n\n    if (num_row < 3 || num_row > 10) {\n      setError(\"The maximum number of rows will be 10 and mimimum number of rows will be 3.\");\n    }\n\n    let num_seats = [...[...Array(num_row).keys()].map(item => item + 1)].reverse();\n    setSeats(num_seats);\n  }, [rows]);\n  React.useEffect(() => {\n    if (totalBooked > 4) {\n      alert(\"Can't Book More than 5 seats\");\n      setDisablell(true);\n    }\n  }, [totalBooked]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: seats.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Row, {\n            totalBooked: totalBooked,\n            setTotalBooked: setTotalBooked,\n            seatSelected: seatSelected,\n            num_of_seats: item,\n            row_num: item,\n            setTotalCost: setTotalCost,\n            setSeatSelected: setSeatSelected,\n            disable: dsiableAll\n          }, uuid(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        navigate(\"/payment\");\n      },\n      disabled: totalCost === 0,\n      className: \"main\",\n      children: \"Go To Payment Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Booking, \"oYG9prZIESZx5BDOyHXvEo61U0E=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Booking;\nexport default Booking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Booking\");","map":{"version":3,"sources":["C:/Users/rm293.LAPTOP-9OARGB3K/Desktop/Data Structures and Algo/react/movie_theater/src/pages/Booking.jsx"],"names":["React","useState","useParams","v4","uuid","Row","useNavigate","Booking","setTotalCost","totalCost","navigate","rows","error","setError","seats","setSeats","seatSelected","setSeatSelected","totalBooked","setTotalBooked","dsiableAll","setDisablell","useEffect","num_row","Number","num_seats","Array","keys","map","item","reverse","alert","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport Row from \"../components/Row\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nfunction Booking({ setTotalCost, totalCost }) {\r\n  const navigate = useNavigate();\r\n  const { rows } = useParams();\r\n  const [error, setError] = useState(\"\");\r\n  const [seats, setSeats] = useState([]);\r\n  const [seatSelected, setSeatSelected] = useState([]);\r\n  const [totalBooked, setTotalBooked] = useState(0);\r\n  const [dsiableAll, setDisablell] = useState(false);\r\n  //fetching data from the api\r\n  //   React.useEffect(() => {\r\n  //     fetch(`https://codebuddy.review/seats?count=${rows}`)\r\n  //       .then((res) => res.json())\r\n  //       .then((data) => {\r\n  //         console.log(data);\r\n  //       });\r\n  //   }, [rows]);\r\n\r\n  //checking number of seats\r\n\r\n  React.useEffect(() => {\r\n    let num_row = Number(rows);\r\n    if (num_row < 3 || num_row > 10) {\r\n      setError(\r\n        \"The maximum number of rows will be 10 and mimimum number of rows will be 3.\"\r\n      );\r\n    }\r\n\r\n    let num_seats = [\r\n      ...[...Array(num_row).keys()].map((item) => item + 1),\r\n    ].reverse();\r\n    setSeats(num_seats);\r\n  }, [rows]);\r\n  React.useEffect(() => {\r\n    if (totalBooked > 4) {\r\n      alert(\"Can't Book More than 5 seats\");\r\n      setDisablell(true)\r\n    }\r\n  }, [totalBooked]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        {error ? (\r\n          <p>{error}</p>\r\n        ) : (\r\n          <>\r\n            {seats.map((item, index) => {\r\n              return (\r\n                <Row\r\n                totalBooked={totalBooked}\r\n                  setTotalBooked={setTotalBooked}\r\n                  seatSelected={seatSelected}\r\n                  num_of_seats={item}\r\n                  row_num={item}\r\n                  setTotalCost={setTotalCost}\r\n                  setSeatSelected={setSeatSelected}\r\n                  key={uuid()}\r\n                  disable={dsiableAll}\r\n                />\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </div>\r\n      <button\r\n        onClick={() => {\r\n          navigate(\"/payment\");\r\n        }}\r\n        disabled={totalCost === 0}\r\n        className=\"main\"\r\n      >\r\n        Go To Payment Page\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Booking;\r\n"]},"metadata":{},"sourceType":"module"}