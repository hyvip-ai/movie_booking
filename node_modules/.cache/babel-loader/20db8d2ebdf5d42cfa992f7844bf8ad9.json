{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rm293.LAPTOP-9OARGB3K\\\\Desktop\\\\Data Structures and Algo\\\\react\\\\movie_theater\\\\src\\\\pages\\\\Booking.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { v4 as uuid } from \"uuid\";\nimport Row from \"../components/Row\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Booking() {\n  _s();\n\n  const {\n    rows\n  } = useParams();\n  console.log(rows);\n  const [error, setError] = useState(\"\");\n  const [seats, setSeats] = useState([]);\n  const [seatSelected, setSeatSelected] = useState(0); //fetching data from the api\n  //   React.useEffect(() => {\n  //     fetch(`https://codebuddy.review/seats?count=${rows}`)\n  //       .then((res) => res.json())\n  //       .then((data) => {\n  //         console.log(data);\n  //       });\n  //   }, [rows]);\n  //checking number of seats\n\n  React.useEffect(() => {\n    let num_row = Number(rows);\n\n    if (num_row < 3 || num_row > 10) {\n      setError(\"The maximum number of rows will be 10 and mimimum number of rows will be 3.\");\n    }\n\n    let num_seats = [...[...Array(num_row).keys()].map(item => item + 1)].reverse();\n    setSeats(num_seats);\n  }, [rows]);\n  React.useEffect(() => {\n    console.log(seatSelected);\n  }, [seatSelected]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: seats.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Row, {\n            num_of_seats: item,\n            row_num: item,\n            setSeatSelected: setSeatSelected\n          }, uuid(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Booking, \"McbVpi3s6n3VwOASyPvwaeBlaHg=\", false, function () {\n  return [useParams];\n});\n\n_c = Booking;\nexport default Booking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Booking\");","map":{"version":3,"sources":["C:/Users/rm293.LAPTOP-9OARGB3K/Desktop/Data Structures and Algo/react/movie_theater/src/pages/Booking.jsx"],"names":["React","useState","useParams","v4","uuid","Row","Booking","rows","console","log","error","setError","seats","setSeats","seatSelected","setSeatSelected","useEffect","num_row","Number","num_seats","Array","keys","map","item","reverse","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;;;AACA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAWL,SAAS,EAA1B;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,KAAD,EAAOC,QAAP,IAAmBZ,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,CAAD,CAAhD,CALiB,CAMjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEAD,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AAClB,QAAIC,OAAO,GAAGC,MAAM,CAACX,IAAD,CAApB;;AACA,QAAGU,OAAO,GAAC,CAAR,IAAaA,OAAO,GAAC,EAAxB,EAA2B;AACvBN,MAAAA,QAAQ,CAAC,6EAAD,CAAR;AACH;;AAEF,QAAIQ,SAAS,GAAG,CAAC,GAAG,CAAC,GAAGC,KAAK,CAACH,OAAD,CAAL,CAAeI,IAAf,EAAJ,EAA2BC,GAA3B,CAA+BC,IAAI,IAAEA,IAAI,GAAC,CAA1C,CAAJ,EAAkDC,OAAlD,EAAhB;AACAX,IAAAA,QAAQ,CAACM,SAAD,CAAR;AACF,GARD,EAQG,CAACZ,IAAD,CARH;AASAP,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAI;AAClBR,IAAAA,OAAO,CAACC,GAAR,CAAYK,YAAZ;AACD,GAFD,EAEE,CAACA,YAAD,CAFF;AAGA,sBAAO,QAAC,KAAD,CAAO,QAAP;AAAA,2BACH;AAAA,gBACKJ,KAAK,gBAAE;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAAF,gBAAkB;AAAA,kBAElBE,KAAK,CAACU,GAAN,CAAU,CAACC,IAAD,EAAME,KAAN,KAAc;AACpB,8BAAO,QAAC,GAAD;AAAK,YAAA,YAAY,EAAEF,IAAnB;AAAyB,YAAA,OAAO,EAAEA,IAAlC;AAAwC,YAAA,eAAe,EAAER;AAAzD,aAA+EX,IAAI,EAAnF;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFD;AAFkB;AAD5B;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAWD;;GAxCQE,O;UACUJ,S;;;KADVI,O;AA0CT,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {v4 as uuid} from \"uuid\";\r\nimport Row from \"../components/Row\";\r\nfunction Booking() {\r\n  const { rows } = useParams();\r\n  console.log(rows);\r\n  const [error, setError] = useState(\"\");\r\n  const [seats,setSeats] = useState([])\r\n  const [seatSelected, setSeatSelected] = useState(0)\r\n  //fetching data from the api\r\n  //   React.useEffect(() => {\r\n  //     fetch(`https://codebuddy.review/seats?count=${rows}`)\r\n  //       .then((res) => res.json())\r\n  //       .then((data) => {\r\n  //         console.log(data);\r\n  //       });\r\n  //   }, [rows]);\r\n\r\n  //checking number of seats\r\n\r\n  React.useEffect(() => {\r\n      let num_row = Number(rows)\r\n      if(num_row<3 || num_row>10){\r\n          setError(\"The maximum number of rows will be 10 and mimimum number of rows will be 3.\")\r\n      }\r\n\r\n     let num_seats = [...[...Array(num_row).keys()].map(item=>item+1)].reverse()\r\n     setSeats(num_seats)\r\n  }, [rows]);\r\n  React.useEffect(()=>{\r\n    console.log(seatSelected)\r\n  },[seatSelected])\r\n  return <React.Fragment>\r\n      <div>\r\n          {error? <p>{error}</p> :<>\r\n            {\r\n                seats.map((item,index)=>{\r\n                    return <Row num_of_seats={item} row_num={item} setSeatSelected={setSeatSelected} key={uuid()} />\r\n                })\r\n            }\r\n          </>}\r\n      </div>\r\n  </React.Fragment>;\r\n}\r\n\r\nexport default Booking;\r\n"]},"metadata":{},"sourceType":"module"}